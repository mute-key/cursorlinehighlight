{
    "name": "cursorlinehighlight",
    "publisher": "mutekey",
    "displayName": "Cursor/Selection Line Highlight",
    "description": "Apply configurable decorations on cursor line and selection lines.",
    "version": "1.1.3",
    "icon": "./misc/icon.png",
    "engines": {
        "vscode": "^1.96.0"
    },
    "activationEvents": [
        "onStartupFinished"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/mute-key/cursorlinehighlight"
    },
    "content": {
        "baseContentUrl": "https://github.com/mute-key/cursorlinehighlight/blob/master/",
        "baseImagesUrl": "https://github.com/mute-key/cursorlinehighlight/raw/master/"
    },
    "keywords": [
        "cursor",
        "line",
        "highlight",
        "selection",
        "range"
    ],
    "categories": [
        "Themes",
        "Visualization",
        "Other"
    ],
    "extensionKind": [
        "ui",
        "workspace"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "configuration": [
            {
                "title": "General",
                "properties": {
                    "cursorlinehighlight.general.borderOpacity": {
                        "type": "number",
                        "enum": [
                            0.1,
                            0.2,
                            0.3,
                            0.4,
                            0.5,
                            0.6,
                            0.7,
                            0.8,
                            0.9,
                            1
                        ],
                        "default": 0.7,
                        "markdownDescription": "opacity of decoration border in __```%```__. \n\n__```1```__ is no opacity.",
                        "order": 1
                    },
                    "cursorlinehighlight.general.backgroundOpacity": {
                        "type": "number",
                        "enum": [
                            0.1,
                            0.2,
                            0.3,
                            0.4,
                            0.5,
                            0.6,
                            0.7,
                            0.8,
                            0.9,
                            1
                        ],
                        "default": 0.3,
                        "markdownDescription": "opacity of background color of selection in __```%```__. \n\n__```1```__ is no opacity.",
                        "order": 2
                    }
                }
            },
            {
                "title": "Status Text",
                "properties": {
                    "cursorlinehighlight.statusText.enabled": {
                        "type": "boolean",
                        "default": true,
                        "description": "Enable inline status text.",
                        "order": 1
                    },
                    "cursorlinehighlight.statusText.iconEnabled": {
                        "type": "boolean",
                        "default": false,
                        "description": "(Not working yet) Enable inline status icon text.",
                        "order": 2
                    },
                    "cursorlinehighlight.statusText.color": {
                        "type": "string",
                        "default": "#93A5C1",
                        "markdownDescription": "Change the Inline Status Text color. \n\nColor must be in hex color of __```#RRGGBB```__.",
                        "order": 3
                    },
                    "cursorlinehighlight.statusText.backgroundColor": {
                        "type": "string",
                        "default": null,
                        "markdownDescription": "Change the Inline Status Text background color. \n\nColor must be in hex color of __```#RRGGBB```__,  __```null```__ or __```\"\"```__ (No background).",
                        "order": 4
                    },
                    "cursorlinehighlight.statusText.opacity": {
                        "type": "number",
                        "enum": [
                            0.1,
                            0.2,
                            0.3,
                            0.4,
                            0.5,
                            0.6,
                            0.7,
                            0.8,
                            0.9,
                            1
                        ],
                        "default": 0.5,
                        "markdownDescription": "Opacity of background color of selection in __```%```__. __```1```__ is no opacity.",
                        "order": 5
                    },
                    "cursorlinehighlight.statusText.fontStyle": {
                        "type": "string",
                        "enum": [
                            "italic",
                            "normal"
                        ],
                        "default": "italic",
                        "description": "Border position on current selection.",
                        "order": 6
                    },
                    "cursorlinehighlight.statusText.fontWeight": {
                        "type": "string",
                        "enum": [
                            "lighter",
                            "light",
                            "normal",
                            "bold"
                        ],
                        "default": "lighter",
                        "description": "Border position on current selection.",
                        "order": 7
                    },
                    "cursorlinehighlight.statusText.cursorOnlyText": {
                        "type": "string",
                        "default": "< Editing ... At (Col ${col})",
                        "markdownDescription": "Status Text on Cursor Only Seelection. \n\n__```${col}```__ is where meta/delta information will be displayed.",
                        "order": 8
                    },
                    "cursorlinehighlight.statusText.singleLineText": {
                        "type": "string",
                        "default": "< Selection ... Of (${character} Characters)",
                        "markdownDescription": "Status Text on Single Line Seelection. \n\n__```${character}```__ is where selection information will be displayed.",
                        "order": 9
                    },
                    "cursorlinehighlight.statusText.multiLineCursorText": {
                        "type": "string",
                        "default": "< Selection Cursor ... Of (${line} Lines, ${character} Characters, Indent/EOL Ignored)",
                        "markdownDescription": "Status Text on Multi Line Seelection (Active Cursor). \n\n__```${line}```__, __```${character}```__ is where meta/delta information will be displayed.",
                        "order": 10
                    },
                    "cursorlinehighlight.statusText.multiLineAnchorText": {
                        "type": "string",
                        "default": "< Selection Anchor ... Of (${line} Lines, ${char} Characters, Indent/EOL Ignored)",
                        "markdownDescription": "Status Text on Multi Line Seelection (Anchor). \n\n__```${line}```__, __```${char}```__ is where meta/delta information will be displayed.",
                        "order": 11
                    },
                    "cursorlinehighlight.statusText.multiCursorText": {
                        "type": "string",
                        "default": "< Multi Selection ... Of (${nth} of ${count}, with Total ${line} Lines ${character} Characters )",
                        "markdownDescription": "Status Text on Multi Cursor Seelection. \n\n__```${nth}```__, __```${count}```__, __```${line}```__, __```${character}```__ is where meta/delta information will be displayed.",
                        "order": 12
                    }
                }
            },
            {
                "title": "Cursor Only",
                "properties": {
                    "cursorlinehighlight.cursorOnly.borderColor": {
                        "type": "string",
                        "default": "#93A5C1",
                        "markdownDescription": "Change the border color. \n\nColor must be in hex color of __```#RRGGBB```__.",
                        "order": 1
                    },
                    "cursorlinehighlight.cursorOnly.backgroundColor": {
                        "type": "string",
                        "default": "#383F49",
                        "markdownDescription": "Change the background color. \n\nColor must be in hex color of __```#RRGGBB```__,  __```null```__ or __```\"\"```__ (No background).",
                        "order": 2
                    },
                    "cursorlinehighlight.cursorOnly.borderPosition": {
                        "type": "string",
                        "enum": [
                            "bottom | is Whole Line",
                            "bottom | before Cursor",
                            "bottom | after Cursor"
                        ],
                        "default": "bottom | is Whole Line",
                        "description": "Border position on current selection.",
                        "order": 3
                    },
                    "cursorlinehighlight.cursorOnly.borderWidth": {
                        "type": "string",
                        "default": "2px",
                        "markdownDescription": "Border width, should use unit of __```'px'```__ or __```'em'```__.",
                        "order": 4
                    },
                    "cursorlinehighlight.cursorOnly.borderStyle": {
                        "type": [
                            "string"
                        ],
                        "enum": [
                            "solid",
                            "dotted",
                            "dashed"
                        ],
                        "default": "dotted",
                        "description": "Main Border style on current line.",
                        "order": 5
                    },
                    "cursorlinehighlight.cursorOnly.borderStyleWithafterCursor": {
                        "type": [
                            "string"
                        ],
                        "enum": [
                            "solid",
                            "dotted",
                            "dashed"
                        ],
                        "default": "dotted",
                        "description": "(not working yet) Use this border style only when [bottom | after Cursor]. this is border style for previous range.",
                        "order": 6
                    }
                }
            },
            {
                "title": "Single Line",
                "properties": {
                    "cursorlinehighlight.singleLine.borderColor": {
                        "type": "string",
                        "default": "#93A5C1",
                        "markdownDescription": "Change the border color. \n\nColor must be in hex color of __```#RRGGBB```__.",
                        "order": 1
                    },
                    "cursorlinehighlight.singleLine.backgroundColor": {
                        "type": "string",
                        "default": "#383F49",
                        "markdownDescription": "Change the background color. \n\nColor must be in hex color of __```#RRGGBB```__,  __```null```__ or __```\"\"```__ (No background).",
                        "order": 2
                    },
                    "cursorlinehighlight.singleLine.": {
                        "type": "string",
                        "enum": [
                            "bottom | selection Only",
                            "top-bottom | selection Only",
                            "top-right-bottom-left"
                        ],
                        "default": "bottom | Selection Only",
                        "description": "Border position on current selection.",
                        "order": 3
                    },
                    "cursorlinehighlight.singleLine.borderWidth": {
                        "type": "string",
                        "default": "2px",
                        "markdownDescription": "Border width, should use unit of __```'px'```__ or __```'em'```__.",
                        "order": 4
                    },
                    "cursorlinehighlight.singleLine.borderStyle": {
                        "type": "string",
                        "enum": [
                            "solid",
                            "dotted",
                            "dashed"
                        ],
                        "default": "solid",
                        "description": "Border style on current selection.",
                        "order": 5
                    }
                }
            },
            {
                "title": "Multi Line",
                "properties": {
                    "cursorlinehighlight.multiLine.borderColor": {
                        "type": "string",
                        "default": "#93A5C1",
                        "markdownDescription": "Change the border color. \n\nColor must be in hex color of __```#RRGGBB```__.",
                        "order": 1
                    },
                    "cursorlinehighlight.multiLine.backgroundColor": {
                        "type": "string",
                        "default": "#383F49",
                        "markdownDescription": "Change the background color. \n\nColor must be in hex color of __```#RRGGBB```__,  __```null```__ or __```\"\"```__ (No background).",
                        "order": 2
                    },
                    "cursorlinehighlight.multiLine.borderPosition": {
                        "type": "string",
                        "enum": [
                            "top-bottom | is Whole Line",
                            "left | at Line Start"
                        ],
                        "default": "top-bottom | is Whole Line",
                        "description": "Border position on current selection.",
                        "order": 3
                    },
                    "cursorlinehighlight.multiLine.borderWidth": {
                        "type": "string",
                        "default": "2px",
                        "markdownDescription": "Border width, should use unit of __```'px'```__ or __```'em'```__.",
                        "order": 4
                    },
                    "cursorlinehighlight.multiLine.borderStyle": {
                        "type": "string",
                        "enum": [
                            "solid",
                            "dotted",
                            "dashed"
                        ],
                        "default": "dashed",
                        "description": "Border style on current selection.",
                        "order": 5
                    }
                }
            },
            {
                "title": "Multi Cursor",
                "properties": {
                    "cursorlinehighlight.multiCursor.borderColor": {
                        "type": "string",
                        "default": "#93A5C1",
                        "markdownDescription": "Change the border color. \n\nColor must be in hex color of __```#RRGGBB```__.",
                        "order": 1
                    },
                    "cursorlinehighlight.multiCursor.backgroundColor": {
                        "type": "string",
                        "default": "#383F49",
                        "markdownDescription": "Change the background color. \n\nColor must be in hex color of __```#RRGGBB```__,  __```null```__ or __```\"\"```__ (No background).",
                        "order": 2
                    },
                    "cursorlinehighlight.multiCursor.borderPosition": {
                        "type": "string",
                        "enum": [
                            "top-right-bottom-left"
                        ],
                        "default": "top-right-bottom-left",
                        "description": "Border position on current selection.",
                        "order": 3
                    },
                    "cursorlinehighlight.multiCursor.borderWidth": {
                        "type": "string",
                        "default": "2px",
                        "markdownDescription": "Border width, should use unit of __```'px'```__ or __```'em'```__.",
                        "order": 4
                    },
                    "cursorlinehighlight.multiCursor.borderStyle": {
                        "type": "string",
                        "enum": [
                            "solid",
                            "dotted",
                            "dashed"
                        ],
                        "default": "dotted",
                        "description": "Border style on current selection.",
                        "order": 5
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "pnpm run package",
        "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "package": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
        "check-types": "tsc --noEmit",
        "lint": "eslint src",
        "test": "vscode-test"
    },
    "devDependencies": {
        "@types/vscode": "^1.96.0",
        "@types/mocha": "^10.0.10",
        "@types/node": "20.x",
        "@typescript-eslint/eslint-plugin": "^8.17.0",
        "@typescript-eslint/parser": "^8.17.0",
        "eslint": "^9.16.0",
        "esbuild": "^0.24.0",
        "npm-run-all": "^4.1.5",
        "typescript": "^5.7.2",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1"
    }
}